● git add 파일명
    staging area로 이동
● git commit -m "메시지 내용입력"
    repository(저장소)로 이동
● git add .
    파일 전체 staging area로 이동
● git restore --staged 파일명
    스테이징된 파일을 취소    

참고 : 파일을 staging area로 이동하는 것을 '스테이징'이라고 한다.

● git status
    상태창 보기
● git log --all --oneline
    commit한 내용 조회
    --oneline 뒤에 --graph를 붙이면 그래프로 그려준다.
    이때 Vim 에디터가 켜진다 > j, k로 위아래 스크롤 가능하고 q로 종료가능
● git diff
    최근 commit 파일과 현재 파일의 차이점을 보여준다
    Vim 에디터가 켜진다
    스페이스바나 엔터도 하나의 변경점으로 보기 때문에 보통 생으로 사용하진 않는다.
● git difftool (여기에 commit ID를 입력하거나 생략가능) (여기에도 commit ID를 입력하면 앞에있는 ID와 비교해서 보여준다)
    git diff의 시각적 문제점을 해결한 명령어
    y를 누르면 왼쪽은 수정 전, 오른쪽은 수정 후 파일을 띄워준다.
    역시 Vim 에디터가 켜지며 h, j, k, l로 방향키, 종료는 ':q' 또는 ':qa' 입력

● git branch 브랜치명
    작성한 브랜치명으로 새 브랜치 생성